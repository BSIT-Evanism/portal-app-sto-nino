---
import Layout from "@/layouts/Layout.astro";
import ConcernTimeline from "@/components/ConcernTimeline.astro";
import { CalendarComp } from "@/components/Calendar";
import { db } from "@/db";
import { actions } from "astro:actions";
import ConcernButton from "@/components/ConcernButton.astro";

// Check user authentication and approval status
const isLoggedIn = !!Astro.locals.session;
const isApproved = Astro.locals.user?.approved === true;

// Get today's date in local timezone
const today = new Date();
const dateTodayNoTime = today.toLocaleDateString("en-CA"); // This formats as YYYY-MM-DD
const dateParams = Astro.url.searchParams.get("date") || dateTodayNoTime;

// Fetch concerns for the selected date (you'll need to implement this)

// Format date in a consistent way for both server and client
// Format date in PH locale (Tagalog/Filipino, Philippines)
const formattedDate = new Date(dateParams).toLocaleDateString("fil-PH", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const result = Astro.getActionResult(actions.addConcern);
---

<Layout title="Concern Board">
  <div
    class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-8 flex flex-col gap-8 justify-center items-center"
  >
    {!isLoggedIn ? (
      // Not logged in UI
      <div class="text-center py-12">
        <div class="mb-6">
          <svg class="mx-auto h-24 w-24 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
          </svg>
        </div>
        <h1 class="text-3xl font-bold text-gray-900 mb-4">Login Required</h1>
        <p class="text-gray-600 mb-6 max-w-md mx-auto">
          You need to be logged in to access the concern board. Please log in to continue.
        </p>
        <a 
          href="/" 
          class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-bg hover:opacity-80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
        >
          Go to Login
        </a>
      </div>
    ) : !isApproved ? (
      // Logged in but not approved UI
      <div class="text-center py-12">
        <div class="mb-6">
          <svg class="mx-auto h-24 w-24 text-yellow-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z" />
          </svg>
        </div>
        <h1 class="text-3xl font-bold text-gray-900 mb-4">Approval Pending</h1>
        <p class="text-gray-600 mb-6 max-w-md mx-auto">
          Your account is awaiting approval from an administrator. Please wait for approval to access the concern board.
        </p>
        <div class="bg-yellow-50 border border-yellow-200 rounded-md p-4 max-w-md mx-auto">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm text-yellow-700">
                You will receive access once an administrator approves your account.
              </p>
            </div>
          </div>
        </div>
      </div>
    ) : (
      // Logged in and approved - show normal content
      <>
        <h1 class="text-3xl font-bold text-gray-900 mb-8">Concern Board</h1>
        <p class="text-gray-500 mb-4">
          Submit concerns and feedback here to help us improve our service.
        </p>

        {
          result && !result.error && (
            <div class="bg-green-100 text-green-800 text-center p-4 rounded-lg">
              <p class="text-sm font-medium">Successfully submitted concern!</p>
            </div>
          )
        }

        <!-- Calendar Widget -->
        <div class="flex flex-col w-full">
          <!-- Timeline Section -->
          <div class="w-full rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">
              Concerns for {formattedDate}
            </h2>
            <div class="flex flex-col md:flex-row gap-4 relative p-4 min-h-full">
              <ConcernTimeline server:defer dateParams={dateParams}>
                <div slot="fallback" class="w-full md:w-1/2 space-y-4">
                  {Array(3).fill(0).map(() => (
                    <div class="bg-white rounded-xl p-6 border border-gray-100 animate-pulse">
                      <div class="h-4 w-24 bg-gray-200 rounded mb-2" />
                      <div class="space-y-2">
                        <div class="h-3 w-3/4 bg-gray-200 rounded" />
                        <div class="h-3 w-1/2 bg-gray-200 rounded" />
                      </div>
                    </div>
                  ))}
                </div>
              </ConcernTimeline>
              <div class="md:sticky md:top-4 w-full md:w-1/2 h-fit bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                <div class="mb-8 max-w-fit mx-auto">
                  <CalendarComp selectedDate={dateParams} client:only="react" />
                </div>
                <ConcernButton dateParams={dateParams} server:defer>
                  <div slot="fallback" class="space-y-4">
                    <div class="h-6 w-32 bg-gray-200 rounded animate-pulse"></div>
                    <div class="space-y-2">
                      <div class="h-10 bg-gray-200 rounded"></div>
                      <div class="h-24 bg-gray-200 rounded"></div>
                    </div>
                    <div class="h-10 w-full bg-gray-200 rounded"></div>
                  </div>
                </ConcernButton>
              </div>
            </div>
          </div>
        </div>
      </>
    )}
  </div>
</Layout>
